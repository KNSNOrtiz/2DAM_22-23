import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author akihi
 */
public class mainFrame extends javax.swing.JFrame {

    static ArrayList<Alumno> listaAlumnos = new ArrayList<>();
    static DefaultTableModel tabla;
    static int matrSelec = 0;
    static int indexAlumno = 0;
    BufferedWriter bw;
    BufferedReader br;
    FileWriter fw;
    FileReader fr;    
    FileOutputStream fos;
    ObjectOutputStream oos;
    FileInputStream fis;
    ObjectInputStream ois;    
    File fichero;

    public mainFrame() {
        initComponents();
        tabla = (DefaultTableModel)tableAlumnos.getModel();
        tableAlumnos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tableAlumnos.rowAtPoint(evt.getPoint());
                int col = tableAlumnos.columnAtPoint(evt.getPoint());
                if (row >= 0 && col >= 0) {
                    System.out.println("OnClick..."+tableAlumnos.getValueAt(row, 0));
                    matrSelec = (int)tableAlumnos.getValueAt(row, 0);      
                    indexAlumno = row;
                }
            }
        });        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAlumnos = new javax.swing.JTable();
        panelImportar = new javax.swing.JPanel();
        cbxOrigen = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnImportar = new javax.swing.JButton();
        txtImportar = new javax.swing.JTextField();
        btnBuscarOrigen = new javax.swing.JButton();
        panelExportar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbxDestino = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnExportar = new javax.swing.JButton();
        txtExportar = new javax.swing.JTextField();
        btnBuscarDestino = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UD1: Manejo de Ficheros  | Ortiz Jibaja, Mario");
        setResizable(false);

        tableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nombre Alumno", "Fecha Nacimiento", "Nota Media", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAlumnos);

        panelImportar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelImportar.setToolTipText("");
        panelImportar.setName(""); // NOI18N

        cbxOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fichero Objetos Serializables", "Fichero de texto" }));

        jLabel1.setText("Importar desde");

        jLabel5.setText("Origen");

        jLabel6.setText("Fichero");

        btnImportar.setText("Importar");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });

        txtImportar.setEditable(false);

        btnBuscarOrigen.setText("Buscar...");
        btnBuscarOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarOrigenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelImportarLayout = new javax.swing.GroupLayout(panelImportar);
        panelImportar.setLayout(panelImportarLayout);
        panelImportarLayout.setHorizontalGroup(
            panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImportarLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImportarLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnImportar)
                    .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelImportarLayout.createSequentialGroup()
                        .addComponent(txtImportar, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarOrigen)))
                .addGap(13, 13, 13))
        );
        panelImportarLayout.setVerticalGroup(
            panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImportarLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtImportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarOrigen))
                .addGap(3, 3, 3)
                .addComponent(btnImportar))
        );

        panelExportar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelExportar.setToolTipText("");

        jLabel2.setText("Exportar a");

        cbxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fichero Objetos Serializables", "Fichero de texto" }));

        jLabel3.setText("Destino");

        jLabel4.setText("Nombre");

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnBuscarDestino.setText("Buscar...");
        btnBuscarDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDestinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelExportarLayout = new javax.swing.GroupLayout(panelExportar);
        panelExportar.setLayout(panelExportarLayout);
        panelExportarLayout.setHorizontalGroup(
            panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelExportarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExportarLayout.createSequentialGroup()
                        .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnExportar)
                            .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100))
                    .addComponent(txtExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarDestino)
                .addContainerGap())
            .addGroup(panelExportarLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelExportarLayout.setVerticalGroup(
            panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExportarLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExportarLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(btnExportar))
                    .addGroup(panelExportarLayout.createSequentialGroup()
                        .addGroup(panelExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtExportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarDestino))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        btnAlta.setText("Alta");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        btnBaja.setText("Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAlta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(panelImportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlta)
                    .addComponent(btnBaja)
                    .addComponent(btnModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelImportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelExportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        panelImportar.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        Alta();
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        Baja();
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        Modificar();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarOrigenActionPerformed
        JFileChooser jfc = new JFileChooser(".");
        int respuesta = 0;
        if((respuesta = jfc.showOpenDialog(this)) == JFileChooser.APPROVE_OPTION) {
            txtImportar.setText(jfc.getSelectedFile().getAbsolutePath());
        }      
    }//GEN-LAST:event_btnBuscarOrigenActionPerformed

    private void btnBuscarDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDestinoActionPerformed
        JFileChooser jfc = new JFileChooser(".");
        int respuesta = 0;
        if((respuesta = jfc.showOpenDialog(this)) == JFileChooser.APPROVE_OPTION) {
            txtExportar.setText(jfc.getSelectedFile().getAbsolutePath());
        }
        
    }//GEN-LAST:event_btnBuscarDestinoActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        if (cbxOrigen.getSelectedIndex() == 0) {
            ImportarSerializable();
        }
        else{
            ImportarTexto();
        }
        cargarDatos();
    }//GEN-LAST:event_btnImportarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        if (cbxDestino.getSelectedIndex() == 0) {
            ExportarSerializable();
        }
        else{
            ExportarTexto();
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnBuscarDestino;
    private javax.swing.JButton btnBuscarOrigen;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbxDestino;
    private javax.swing.JComboBox<String> cbxOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelExportar;
    private javax.swing.JPanel panelImportar;
    private javax.swing.JTable tableAlumnos;
    private javax.swing.JTextField txtExportar;
    private javax.swing.JTextField txtImportar;
    // End of variables declaration//GEN-END:variables

    private void Alta(){
        JDialog dlgAlta = new dialogAlta(null, true);
        dlgAlta.setVisible(true);
        cargarDatos();
    } 
    private void Baja(){
        if (tableAlumnos.getSelectedRowCount() != 0) {
            int respuesta = JOptionPane.showConfirmDialog(null, "Vas a borrar al alumno con matrícula " + matrSelec + ".\n¿Estás seguro?" , "Confirmar baja", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
               listaAlumnos.remove(indexAlumno); 
               cargarDatos();
            }    
            
        }
    }
    private void Modificar(){
        if (tableAlumnos.getSelectedRowCount() != 0) {
            JDialog dlgModificar = new dialogModificar(null, true);
            dlgModificar.setVisible(true);
            cargarDatos(); 
            
        }       
    }
    
    private void ImportarSerializable(){
        fichero = new File(txtImportar.getText());
        try{
            fis = new FileInputStream(fichero);
            ois = new ObjectInputStream(fis);
            listaAlumnos = (ArrayList <Alumno>)ois.readObject();
            ois.close();
            fis.close();
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido abrir el fichero.");
        } catch (IOException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido leer el fichero.");
        } catch (ClassNotFoundException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido cargar la lista.");
        }
    }
    
    private void ImportarTexto(){
        fichero = new File(txtImportar.getText());
        String linea = "";
        try{
            fr = new FileReader(fichero);
            br = new BufferedReader(fr);
            while ((linea = br.readLine()) != null) {  
                try{
                    Alumno alTmp = new Alumno(Integer.valueOf(linea.substring(0, linea.indexOf("*"))), "Nombre Placeholder", "01/01/2001", 0.0, 0); //  He tenido problemas a la hora de buscar índices cuando hay más de un asterisco, pero consigue leer el número de matrícula.
                    listaAlumnos.add(alTmp);
                } catch (NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "Error de lectura en el fichero.");
                } catch (StringIndexOutOfBoundsException ex){
                    JOptionPane.showMessageDialog(null, "Error al leer datos del alumno.");
                }
                
            }
            fr.close();
            br.close();
            
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido abrir el fichero.");
        } catch (IOException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se puede escribir en el fichero.");
        }       
    }
    
    private void ExportarSerializable(){
        fichero = new File(txtExportar.getText());
        try{
            fos = new FileOutputStream(fichero);
            oos = new ObjectOutputStream(fos);
            oos.writeObject(listaAlumnos);
            oos.close();
            fos.close();
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido abrir el fichero.");
        } catch (IOException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se puede escribir en el fichero.");
        }
    }
     private void ExportarTexto(){
        fichero = new File(txtExportar.getText());
        try{
            fw = new FileWriter(fichero);
            bw = new BufferedWriter(fw);
            for(Alumno alTmp : listaAlumnos){
                bw.write(alTmp.toString() + "\n");
            }
            fw.close();
            bw.close();
            
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se ha podido abrir el fichero.");
        } catch (IOException ex){
            JOptionPane.showMessageDialog(null, "ERROR: No se puede escribir en el fichero.");
        }
    }
    
    private static void cargarDatos(){
        tabla.setRowCount(0);
        for(Alumno alTmp : listaAlumnos){
            Object[] datosAlumno = {alTmp.getNumMatr(), alTmp.getNombre(), Alumno.DateToString(alTmp.getFnac()), alTmp.getNotaMedia(),alTmp.getEdad()};
            tabla.addRow(datosAlumno);
        }
    }

    


}


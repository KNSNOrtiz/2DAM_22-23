
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author japa
 */
public class Ejercicio2main extends javax.swing.JFrame {
    private GenericDomainTableModel<Persona> personasTableModel;
    private TableRowSorter<GenericDomainTableModel> sorterTabla;

  
    public Ejercicio2main() {
        initComponents();
        inicializaTabla();
    }

    private void inicializaTabla() {
               Object[] columnIdentifiers = new Object[]{
            "Código", 
            "Nombre", 
            "Edad", 
            "Deuda"
        };
        
        personasTableModel = new GenericDomainTableModel<Persona>(Arrays.asList(columnIdentifiers)) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch(columnIndex) {
                    case 0: return String.class;
                    case 1: return String.class;
                    case 2: return Integer.class;
                    case 3: return Double.class;
                }
                throw new ArrayIndexOutOfBoundsException(columnIndex);
            }
            
            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                Persona persona = getDomainObject(rowIndex);
                switch(columnIndex) {
                    case 0: return persona.getCodigo();
                    case 1: return persona.getNombres();
                    case 2: return persona.getEdad();
                    case 3: return persona.getValorDeuda();
                        default: throw new ArrayIndexOutOfBoundsException(columnIndex);
                }
            }
            
            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                Persona persona = getDomainObject(rowIndex);
                switch(columnIndex) {
                    case 0: persona.setCodigo((String)aValue); break;
                    case 1: persona.setNombres((String)aValue); break;
                    case 2: persona.setEdad((Integer)aValue); break;
                    case 3: persona.setValorDeuda((Double)aValue); break;
                        default: throw new ArrayIndexOutOfBoundsException(columnIndex);
                }
                notifyTableCellUpdated(rowIndex, columnIndex);
            }
        };
        jTablePersonas.setModel(personasTableModel);
        personasTableModel.addRows(obtenerPersonas());
        sorterTabla = new TableRowSorter<GenericDomainTableModel>(personasTableModel);
        jTablePersonas.setRowSorter(sorterTabla);

    }
    
       public ArrayList<Persona> obtenerPersonas() {
        ArrayList<Persona> lista = new ArrayList();
        lista.add(new Persona("Cod001", "Juan", 24, 5000.4));
        lista.add(new Persona("Cod002", "Felipe", 27, 6700.8));
        lista.add(new Persona("Cod003", "Diana", 31, 354.9));
        lista.add(new Persona("Cod004", "María", 46, 5300));
        lista.add(new Persona("Cod005", "Camilo", 28, 2890.6));
        lista.add(new Persona("Cod006", "Pedro", 52, 1600.5));
        lista.add(new Persona("Cod007", "Sandra", 43, 2000));
        lista.add(new Persona("Cod008", "Esteban", 39, 752));
        lista.add(new Persona("Cod009", "Pablo", 26, 2430.1));
        lista.add(new Persona("Cod010", "Ana", 38, 3470.3));
        return lista;
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jButtonMostrar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonFiltrar = new javax.swing.JButton();
        jTextFieldFiltrado = new javax.swing.JTextField();
        jComboBoxColumna = new javax.swing.JComboBox<>();
        jButtonOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ejercicio 2: Mantenimiento de una tabla | Ortiz Jibaja, Mario");

        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablePersonas);

        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jButtonFiltrar.setText("Filtrar");
        jButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarActionPerformed(evt);
            }
        });

        jComboBoxColumna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nombre", "Edad" }));

        jButtonOrdenar.setText("Ordenar");
        jButtonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 146, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonMostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBorrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFiltrado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMostrar)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonBorrar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFiltrar)
                    .addComponent(jTextFieldFiltrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxColumna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOrdenar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        if (jTablePersonas.getSelectedRow() > -1) {
            dialogPersonas dialog = new dialogPersonas(this, true);
            dialog.showDialogMostrar((Persona)personasTableModel.getDomainObject(jTablePersonas.getSelectedRow()));
        }
    }//GEN-LAST:event_jButtonMostrarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (jTablePersonas.getSelectedRow() > -1) {
            dialogPersonas dialog = new dialogPersonas(this, true);
            Persona persona = dialog.showDialogModificar((Persona)personasTableModel.getDomainObject(jTablePersonas.getSelectedRow()));
            if (persona != null) {
                personasTableModel.setValueAt(persona.getCodigo(), jTablePersonas.getSelectedRow(), 0);
                personasTableModel.setValueAt(persona.getNombres(), jTablePersonas.getSelectedRow(), 1);
                personasTableModel.setValueAt(persona.getEdad(), jTablePersonas.getSelectedRow(), 2);
                personasTableModel.setValueAt(persona.getValorDeuda(), jTablePersonas.getSelectedRow(), 3);
            } 
            jTablePersonas.repaint();
        }
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
         sorterTabla.setRowFilter(RowFilter.regexFilter(jTextFieldFiltrado.getText(),jComboBoxColumna.getSelectedIndex()));
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jButtonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarActionPerformed
        sorterTabla.toggleSortOrder(jComboBoxColumna.getSelectedIndex());
        sorterTabla.sort();
    }//GEN-LAST:event_jButtonOrdenarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        dialogPersonas dialog = new dialogPersonas(this, true );
        Persona persona = dialog.showDialogAnadir();
        if (persona != null) {
            personasTableModel.addRow(persona);    
        }
        
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
         if (jTablePersonas.getSelectedRow() > -1) {
             int res = JOptionPane.showConfirmDialog(this, "Se va a eliminar un registo. ¿Estás seguro?", "Borrado de registro", JOptionPane.YES_NO_OPTION);
             if (res == JOptionPane.YES_OPTION) {
                 personasTableModel.deleteRow((Persona)personasTableModel.getDomainObject(jTablePersonas.getSelectedRow()));
             }
            
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicio2main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicio2main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicio2main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicio2main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ejercicio2main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonOrdenar;
    private javax.swing.JComboBox<String> jComboBoxColumna;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTextField jTextFieldFiltrado;
    // End of variables declaration//GEN-END:variables
}
